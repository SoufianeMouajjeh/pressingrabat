{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/config.ts"],"sourcesContent":["/**\n * Configuration for Clean & Fresh Laundry Website\n * Connected to the main SaaS platform\n */\n\nexport const laundryConfig = {\n  // Laundry identification\n  slug: process.env.NEXT_PUBLIC_LAUNDRY_SLUG || 'clean-fresh-laundry',\n  apiKey: process.env.NEXT_PUBLIC_LAUNDRY_API_KEY || '',\n  \n  // SaaS platform URLs\n  // Use empty string to make API calls relative to the current Next.js app\n  saasUrl: process.env.NEXT_PUBLIC_SAAS_URL || '',\n  siteUrl: process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3001',\n  \n  // Branding (will be fetched from API)\n  name: 'Clean & Fresh Laundry',\n  logo: null as string | null,\n  primaryColor: '#3B82F6',\n}\n\nexport type LaundryInfo = {\n  id: string;\n  name: string;\n  address: string;\n  phoneNumber: string;\n  slaHours: number;\n  websiteUrl: string | null;\n  logo: string | null;\n  logoUrl?: string | null;\n  primaryColor: string | null;\n}\n\nexport type Product = {\n  id: string;\n  name: string;\n  description: string | null;\n  category: string;\n  image: string | null;\n  imageUrl?: string | null;\n  status: string;\n  price: number;\n  services: ProductService[];\n}\n\nexport type ProductService = {\n  id: string;\n  productId: string;\n  service: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC';\n  serviceType?: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC'; // For backward compatibility\n  name?: string; // Display name\n  price?: number; // For display, actual pricing from Product\n}\n\nexport type CartItem = {\n  productId: string;\n  productName: string;\n  serviceId: string;\n  serviceName: string;\n  serviceType: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC';\n  price: number;\n  quantity: number;\n  image?: string | null;\n  imageUrl?: string;\n}\n\nexport type CustomerInfo = {\n  name: string;\n  email: string;\n  phone: string;\n  addressDetails: {\n    street: string;\n    city: string;\n    postalCode: string;\n    type: 'HOME' | 'WORK' | 'OTHER';\n  };\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAEM,MAAM,gBAAgB;IAC3B,yBAAyB;IACzB,MAAM,2DAAwC;IAC9C,QAAQ,gEAA2C;IAEnD,qBAAqB;IACrB,yEAAyE;IACzE,SAAS,wCAAoC;IAC7C,SAAS,6DAAoC;IAE7C,sCAAsC;IACtC,MAAM;IACN,MAAM;IACN,cAAc;AAChB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/saas-api.ts"],"sourcesContent":["/**\n * API Client for communicating with the SaaS platform\n * All requests include the API key for authentication\n */\n\nimport { laundryConfig, LaundryInfo, Product, CartItem, CustomerInfo } from './config';\n\n// Helper function to build full URL\nconst getFullUrl = (path: string): string => {\n  console.log('getFullUrl called with path:', path);\n  console.log('saasUrl:', laundryConfig.saasUrl);\n  console.log('window:', typeof window);\n  \n  // If saasUrl is set, use it as base\n  if (laundryConfig.saasUrl) {\n    console.log('Using saasUrl:', `${laundryConfig.saasUrl}${path}`);\n    return `${laundryConfig.saasUrl}${path}`;\n  }\n  \n  // For server-side calls without saasUrl, construct full URL\n  // This works in development when the API routes are in the same Next.js app\n  if (typeof window === 'undefined') {\n    const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';\n    const host = process.env.VERCEL_URL || `localhost:${process.env.PORT || 3000}`;\n    const fullUrl = `${protocol}://${host}${path}`;\n    console.log('Server-side URL:', fullUrl);\n    return fullUrl;\n  }\n  \n  // For client-side calls, use relative path (works with same-origin API routes)\n  console.log('Client-side relative path:', path);\n  return path;\n};\n\n/**\n * Fetch laundry information (branding, contact info)\n */\nexport const fetchLaundryInfo = async (): Promise<LaundryInfo> => {\n  const url = getFullUrl(`/api/public/laundry/${laundryConfig.slug}/info`);\n  console.log('Fetching laundry info from:', url);\n  \n  try {\n    const response = await fetch(url, {\n      headers: {\n        'x-api-key': laundryConfig.apiKey,\n        'Content-Type': 'application/json',\n      },\n      cache: 'no-store',\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch laundry info: ${response.statusText}`);\n    }\n    \n    return response.json();\n  } catch (error) {\n    console.error('Error fetching laundry info:', error);\n    throw error;\n  }\n};\n\n/**\n * Fetch all products and services for this laundry\n */\nexport const fetchProducts = async (): Promise<Product[]> => {\n  const url = getFullUrl(`/api/public/laundry/${laundryConfig.slug}/products`);\n  const response = await fetch(url, {\n    headers: {\n      'x-api-key': laundryConfig.apiKey,\n      'Content-Type': 'application/json',\n    },\n    cache: 'no-store',\n  });\n  \n  if (!response.ok) {\n    throw new Error(`Failed to fetch products: ${response.statusText}`);\n  }\n  \n  return response.json();\n};\n\n/**\n * Create an order through the checkout API\n * This will create a customer if needed and create the order\n */\nexport const createOrder = async (\n  cartItems: CartItem[],\n  customerInfo: CustomerInfo,\n  specialInstructions?: string,\n  pickupScheduledAt?: string\n): Promise<{ success: boolean; orderId: string; message: string }> => {\n  try {\n    const url = getFullUrl('/api/checkout');\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'x-api-key': laundryConfig.apiKey,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        laundrySlug: laundryConfig.slug,\n        cartItems: cartItems.map(item => ({\n          productId: item.productId,\n          serviceType: item.serviceType,\n          quantity: item.quantity,\n        })),\n        customerInfo,\n        specialInstructions,\n        pickupScheduledAt,\n      }),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || 'Failed to create order');\n    }\n    \n    return response.json();\n  } catch (error: any) {\n    throw new Error(error.message || 'Failed to create order');\n  }\n};\n\n/**\n * Build checkout redirect URL\n * Redirects user to SaaS for authentication, then creates order\n */\nexport const getCheckoutUrl = (\n  cartItems: CartItem[],\n  customerInfo: Partial<CustomerInfo>\n): string => {\n  const returnUrl = `${laundryConfig.siteUrl}/order-success`;\n  \n  const params = new URLSearchParams({\n    laundrySlug: laundryConfig.slug,\n    returnUrl,\n    cart: JSON.stringify(cartItems),\n    customer: JSON.stringify(customerInfo),\n  });\n  \n  return `${laundryConfig.saasUrl}/checkout?${params.toString()}`;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/cart-store.ts"],"sourcesContent":["/**\n * Shopping Cart Store using Zustand\n * Persists to localStorage\n */\n\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { CartItem } from './config';\n\ninterface CartStore {\n  items: CartItem[];\n  addItem: (item: CartItem) => void;\n  removeItem: (productId: string, serviceType: string) => void;\n  updateQuantity: (productId: string, serviceType: string, quantity: number) => void;\n  clearCart: () => void;\n  getTotalItems: () => number;\n  getTotalPrice: () => number;\n}\n\nexport const useCartStore = create<CartStore>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      \n      addItem: (newItem) => {\n        set((state) => {\n          // Check if item already exists\n          const existingIndex = state.items.findIndex(\n            (item) => item.productId === newItem.productId && item.serviceType === newItem.serviceType\n          );\n          \n          if (existingIndex >= 0) {\n            // Update quantity\n            const updatedItems = [...state.items];\n            updatedItems[existingIndex].quantity += newItem.quantity;\n            return { items: updatedItems };\n          }\n          \n          // Add new item\n          return { items: [...state.items, newItem] };\n        });\n      },\n      \n      removeItem: (productId, serviceType) => {\n        set((state) => ({\n          items: state.items.filter(\n            (item) => !(item.productId === productId && item.serviceType === serviceType)\n          ),\n        }));\n      },\n      \n      updateQuantity: (productId, serviceType, quantity) => {\n        set((state) => {\n          if (quantity <= 0) {\n            // Remove item if quantity is 0\n            return {\n              items: state.items.filter(\n                (item) => !(item.productId === productId && item.serviceType === serviceType)\n              ),\n            };\n          }\n          \n          const updatedItems = state.items.map((item) =>\n            item.productId === productId && item.serviceType === serviceType\n              ? { ...item, quantity }\n              : item\n          );\n          \n          return { items: updatedItems };\n        });\n      },\n      \n      clearCart: () => {\n        set({ items: [] });\n      },\n      \n      getTotalItems: () => {\n        return get().items.reduce((total, item) => total + item.quantity, 0);\n      },\n      \n      getTotalPrice: () => {\n        return get().items.reduce((total, item) => total + item.price * item.quantity, 0);\n      },\n    }),\n    {\n      name: 'clean-fresh-cart', // localStorage key\n    }\n  )\n);\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAED;AACA;;;AAaO,MAAM,eAAe,IAAA,kJAAM,IAChC,IAAA,wJAAO,EACL,CAAC,KAAK,MAAQ,CAAC;QACb,OAAO,EAAE;QAET,SAAS,CAAC;YACR,IAAI,CAAC;gBACH,+BAA+B;gBAC/B,MAAM,gBAAgB,MAAM,KAAK,CAAC,SAAS,CACzC,CAAC,OAAS,KAAK,SAAS,KAAK,QAAQ,SAAS,IAAI,KAAK,WAAW,KAAK,QAAQ,WAAW;gBAG5F,IAAI,iBAAiB,GAAG;oBACtB,kBAAkB;oBAClB,MAAM,eAAe;2BAAI,MAAM,KAAK;qBAAC;oBACrC,YAAY,CAAC,cAAc,CAAC,QAAQ,IAAI,QAAQ,QAAQ;oBACxD,OAAO;wBAAE,OAAO;oBAAa;gBAC/B;gBAEA,eAAe;gBACf,OAAO;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAQ;gBAAC;YAC5C;QACF;QAEA,YAAY,CAAC,WAAW;YACtB,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,MAAM,CACvB,CAAC,OAAS,CAAC,CAAC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,WAAW;gBAEhF,CAAC;QACH;QAEA,gBAAgB,CAAC,WAAW,aAAa;YACvC,IAAI,CAAC;gBACH,IAAI,YAAY,GAAG;oBACjB,+BAA+B;oBAC/B,OAAO;wBACL,OAAO,MAAM,KAAK,CAAC,MAAM,CACvB,CAAC,OAAS,CAAC,CAAC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,WAAW;oBAEhF;gBACF;gBAEA,MAAM,eAAe,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,OACpC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,cACjD;wBAAE,GAAG,IAAI;wBAAE;oBAAS,IACpB;gBAGN,OAAO;oBAAE,OAAO;gBAAa;YAC/B;QACF;QAEA,WAAW;YACT,IAAI;gBAAE,OAAO,EAAE;YAAC;QAClB;QAEA,eAAe;YACb,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,QAAQ,EAAE;QACpE;QAEA,eAAe;YACb,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;QACjF;IACF,CAAC,GACD;IACE,MAAM;AACR","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/app/services/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { fetchProducts, fetchLaundryInfo } from '@/lib/saas-api';\nimport { useCartStore } from '@/lib/cart-store';\nimport type { Product, LaundryInfo } from '@/lib/config';\n\nexport default function ServicesPage() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [laundryInfo, setLaundryInfo] = useState<LaundryInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedServices, setSelectedServices] = useState<Record<string, string>>({});\n  const [addedToCart, setAddedToCart] = useState<Record<string, boolean>>({});\n  \n  const { addItem, items } = useCartStore();\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const [productsData, laundryData] = await Promise.all([\n          fetchProducts(),\n          fetchLaundryInfo()\n        ]);\n        setProducts(productsData);\n        setLaundryInfo(laundryData);\n        \n        // Set default service for each product\n        const defaults: Record<string, string> = {};\n        productsData.forEach(product => {\n          if (product.services && product.services.length > 0) {\n            defaults[product.id] = product.services[0].id;\n          }\n        });\n        setSelectedServices(defaults);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load products');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  const getServiceName = (serviceType: string) => {\n    const names: Record<string, string> = {\n      'NETTOYAGE': 'Washing',\n      'REPASSAGE': 'Ironing',\n      'NETTOYAGE_A_SEC': 'Dry Cleaning'\n    };\n    return names[serviceType] || serviceType;\n  };\n\n  const handleAddToCart = (product: Product) => {\n    const serviceId = selectedServices[product.id];\n    const service = product.services?.find(s => s.id === serviceId);\n    \n    if (!service || !service.service) {\n      alert('Please select a service');\n      return;\n    }\n\n    addItem({\n      productId: product.id,\n      productName: product.name,\n      serviceId: service.id,\n      serviceName: getServiceName(service.service),\n      serviceType: service.service,\n      price: service.price || product.price,\n      quantity: 1,\n      imageUrl: product.image || undefined\n    });\n\n    // Show \"Added to Cart\" feedback\n    setAddedToCart(prev => ({ ...prev, [product.id]: true }));\n    setTimeout(() => {\n      setAddedToCart(prev => ({ ...prev, [product.id]: false }));\n    }, 2000);\n  };\n\n  const getTotalItems = () => {\n    return items.reduce((sum, item) => sum + item.quantity, 0);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading products...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 text-xl\">{error}</p>\n          <Link href=\"/\" className=\"mt-4 inline-block text-blue-600 hover:underline\">\n            Return to Home\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"flex items-center space-x-3\">\n              {laundryInfo?.logo && (\n                <Image\n                  src={laundryInfo.logo}\n                  alt={laundryInfo.name}\n                  width={40}\n                  height={40}\n                  className=\"rounded-lg\"\n                />\n              )}\n              <span className=\"text-xl font-bold text-gray-900\">\n                {laundryInfo?.name || 'Clean & Fresh Laundry'}\n              </span>\n            </Link>\n            \n            <div className=\"flex items-center space-x-6\">\n              <Link href=\"/\" className=\"text-gray-700 hover:text-blue-600 transition\">\n                Home\n              </Link>\n              <Link href=\"/services\" className=\"text-blue-600 font-semibold\">\n                Services\n              </Link>\n              <Link href=\"/cart\" className=\"relative\">\n                <svg className=\"w-6 h-6 text-gray-700 hover:text-blue-600 transition\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\n                </svg>\n                {getTotalItems() > 0 && (\n                  <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                    {getTotalItems()}\n                  </span>\n                )}\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <div className=\"bg-blue-600 text-white py-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">Our Services</h1>\n          <p className=\"text-xl text-blue-100\">\n            Professional laundry and dry cleaning services for all your needs\n          </p>\n        </div>\n      </div>\n\n      {/* Products Grid */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {products.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-600 text-lg\">No products available at the moment.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {products.map(product => (\n              <div key={product.id} className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow\">\n                {/* Product Image */}\n                {product.image ? (\n                  <div className=\"relative h-48 bg-gray-200\">\n                    <Image\n                      src={product.image}\n                      alt={product.name}\n                      fill\n                      className=\"object-cover\"\n                    />\n                  </div>\n                ) : (\n                  <div className=\"h-48 bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center\">\n                    <svg className=\"w-20 h-20 text-white opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                    </svg>\n                  </div>\n                )}\n\n                {/* Product Details */}\n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{product.name}</h3>\n                  {product.description && (\n                    <p className=\"text-gray-600 text-sm mb-4\">{product.description}</p>\n                  )}\n\n                  {/* Service Options */}\n                  {product.services && product.services.length > 0 && (\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Select Service:\n                      </label>\n                      <select\n                        value={selectedServices[product.id] || ''}\n                        onChange={(e) => setSelectedServices(prev => ({\n                          ...prev,\n                          [product.id]: e.target.value\n                        }))}\n                        className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {product.services.map(service => (\n                          <option key={service.id} value={service.id}>\n                            {getServiceName(service.service)} - ${(service.price || product.price).toFixed(2)}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  )}\n\n                  {/* Add to Cart Button */}\n                  <button\n                    onClick={() => handleAddToCart(product)}\n                    disabled={addedToCart[product.id]}\n                    className={`w-full py-3 px-4 rounded-lg font-semibold transition ${\n                      addedToCart[product.id]\n                        ? 'bg-green-500 text-white'\n                        : 'bg-blue-600 text-white hover:bg-blue-700'\n                    }`}\n                  >\n                    {addedToCart[product.id] ? (\n                      <span className=\"flex items-center justify-center\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                        Added to Cart!\n                      </span>\n                    ) : (\n                      'Add to Cart'\n                    )}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* View Cart Button */}\n        {getTotalItems() > 0 && (\n          <div className=\"mt-12 text-center\">\n            <Link\n              href=\"/cart\"\n              className=\"inline-flex items-center bg-green-600 text-white px-8 py-4 rounded-lg font-semibold hover:bg-green-700 transition shadow-lg\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              View Cart ({getTotalItems()} {getTotalItems() === 1 ? 'item' : 'items'})\n            </Link>\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-800 text-white py-8 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <p>&copy; {new Date().getFullYear()} {laundryInfo?.name || 'Clean & Fresh Laundry'}. All rights reserved.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}