{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/app/api/checkout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n/**\n * Mock API endpoint for checkout/order creation\n * This replaces the external SaaS API during development\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { laundrySlug, cartItems, customerInfo, specialInstructions, pickupScheduledAt } = body;\n\n    // Validate required fields\n    if (!laundrySlug || !cartItems || !customerInfo) {\n      return NextResponse.json(\n        { error: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n\n    // Generate a mock order ID\n    const orderId = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\n\n    // Calculate total (mock calculation)\n    let totalAmount = 0;\n    cartItems.forEach((item: any) => {\n      // In a real implementation, you'd look up the price from the database\n      totalAmount += item.quantity * 20; // Mock price\n    });\n\n    // Mock successful order creation\n    const orderResponse = {\n      success: true,\n      orderId,\n      message: 'Order created successfully',\n      order: {\n        id: orderId,\n        laundrySlug,\n        customerId: `CUST-${Date.now()}`,\n        totalAmount,\n        status: 'PENDING',\n        items: cartItems,\n        customerInfo,\n        specialInstructions,\n        pickupScheduledAt,\n        createdAt: new Date().toISOString(),\n      },\n    };\n\n    return NextResponse.json(orderResponse);\n  } catch (error: any) {\n    console.error('Checkout error:', error);\n    return NextResponse.json(\n      { error: 'Failed to process checkout' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAMO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,GAAG;QAEzF,2BAA2B;QAC3B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,cAAc;YAC/C,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,UAAU,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,WAAW,IAAI;QAE5F,qCAAqC;QACrC,IAAI,cAAc;QAClB,UAAU,OAAO,CAAC,CAAC;YACjB,sEAAsE;YACtE,eAAe,KAAK,QAAQ,GAAG,IAAI,aAAa;QAClD;QAEA,iCAAiC;QACjC,MAAM,gBAAgB;YACpB,SAAS;YACT;YACA,SAAS;YACT,OAAO;gBACL,IAAI;gBACJ;gBACA,YAAY,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;gBAChC;gBACA,QAAQ;gBACR,OAAO;gBACP;gBACA;gBACA;gBACA,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}