{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/config.ts"],"sourcesContent":["/**\n * Configuration for Clean & Fresh Laundry Website\n * Connected to the main SaaS platform\n */\n\nexport const laundryConfig = {\n  // Laundry identification\n  slug: process.env.NEXT_PUBLIC_LAUNDRY_SLUG || 'clean-fresh-laundry',\n  apiKey: process.env.NEXT_PUBLIC_LAUNDRY_API_KEY || '',\n  \n  // SaaS platform URLs\n  // Use empty string to make API calls relative to the current Next.js app\n  saasUrl: process.env.NEXT_PUBLIC_SAAS_URL || '',\n  siteUrl: process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3001',\n  \n  // Branding (will be fetched from API)\n  name: 'Clean & Fresh Laundry',\n  logo: null as string | null,\n  primaryColor: '#3B82F6',\n}\n\nexport type LaundryInfo = {\n  id: string;\n  name: string;\n  address: string;\n  phoneNumber: string;\n  slaHours: number;\n  websiteUrl: string | null;\n  logo: string | null;\n  logoUrl?: string | null;\n  primaryColor: string | null;\n}\n\nexport type Product = {\n  id: string;\n  name: string;\n  description: string | null;\n  category: string;\n  image: string | null;\n  imageUrl?: string | null;\n  status: string;\n  price: number;\n  services: ProductService[];\n}\n\nexport type ProductService = {\n  id: string;\n  productId: string;\n  service: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC';\n  serviceType?: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC'; // For backward compatibility\n  name?: string; // Display name\n  price?: number; // For display, actual pricing from Product\n}\n\nexport type CartItem = {\n  productId: string;\n  productName: string;\n  serviceId: string;\n  serviceName: string;\n  serviceType: 'NETTOYAGE' | 'REPASSAGE' | 'NETTOYAGE_A_SEC';\n  price: number;\n  quantity: number;\n  image?: string | null;\n  imageUrl?: string;\n}\n\nexport type CustomerInfo = {\n  name: string;\n  email: string;\n  phone: string;\n  addressDetails: {\n    street: string;\n    city: string;\n    postalCode: string;\n    type: 'HOME' | 'WORK' | 'OTHER';\n  };\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAEM,MAAM,gBAAgB;IAC3B,yBAAyB;IACzB,MAAM,2DAAwC;IAC9C,QAAQ,gEAA2C;IAEnD,qBAAqB;IACrB,yEAAyE;IACzE,SAAS,wCAAoC;IAC7C,SAAS,6DAAoC;IAE7C,sCAAsC;IACtC,MAAM;IACN,MAAM;IACN,cAAc;AAChB","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/saas-api.ts"],"sourcesContent":["/**\n * API Client for communicating with the SaaS platform\n * All requests include the API key for authentication\n */\n\nimport { laundryConfig, LaundryInfo, Product, CartItem, CustomerInfo } from './config';\n\n// Helper function to build full URL\nconst getFullUrl = (path: string): string => {\n  // If saasUrl is set, use it as base\n  if (laundryConfig.saasUrl) {\n    return `${laundryConfig.saasUrl}${path}`;\n  }\n  \n  // For server-side calls without saasUrl, construct full URL\n  // This works in development when the API routes are in the same Next.js app\n  if (typeof window === 'undefined') {\n    const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';\n    const host = process.env.VERCEL_URL || `localhost:${process.env.PORT || 3000}`;\n    return `${protocol}://${host}${path}`;\n  }\n  \n  // For client-side calls, use relative path (works with same-origin API routes)\n  return path;\n};\n\n/**\n * Fetch laundry information (branding, contact info)\n */\nexport const fetchLaundryInfo = async (): Promise<LaundryInfo> => {\n  const url = getFullUrl(`/api/public/laundry/${laundryConfig.slug}/info`);\n  \n  const response = await fetch(url, {\n    headers: {\n      'x-api-key': laundryConfig.apiKey,\n      'Content-Type': 'application/json',\n    },\n    cache: 'no-store',\n  });\n  \n  if (!response.ok) {\n    throw new Error(`Failed to fetch laundry info: ${response.statusText}`);\n  }\n  \n  return response.json();\n};\n\n/**\n * Fetch all products and services for this laundry\n */\nexport const fetchProducts = async (): Promise<Product[]> => {\n  const url = getFullUrl(`/api/public/laundry/${laundryConfig.slug}/products`);\n  const response = await fetch(url, {\n    headers: {\n      'x-api-key': laundryConfig.apiKey,\n      'Content-Type': 'application/json',\n    },\n    cache: 'no-store',\n  });\n  \n  if (!response.ok) {\n    throw new Error(`Failed to fetch products: ${response.statusText}`);\n  }\n  \n  return response.json();\n};\n\n/**\n * Create an order through the checkout API\n * This will create a customer if needed and create the order\n */\nexport const createOrder = async (\n  cartItems: CartItem[],\n  customerInfo: CustomerInfo,\n  specialInstructions?: string,\n  pickupScheduledAt?: string\n): Promise<{ success: boolean; orderId: string; message: string }> => {\n  try {\n    const url = getFullUrl('/api/checkout');\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'x-api-key': laundryConfig.apiKey,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        laundrySlug: laundryConfig.slug,\n        cartItems: cartItems.map(item => ({\n          productId: item.productId,\n          serviceType: item.serviceType,\n          quantity: item.quantity,\n        })),\n        customerInfo,\n        specialInstructions,\n        pickupScheduledAt,\n      }),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || 'Failed to create order');\n    }\n    \n    return response.json();\n  } catch (error: any) {\n    throw new Error(error.message || 'Failed to create order');\n  }\n};\n\n/**\n * Build checkout redirect URL\n * Redirects user to SaaS for authentication, then creates order\n */\nexport const getCheckoutUrl = (\n  cartItems: CartItem[],\n  customerInfo: Partial<CustomerInfo>\n): string => {\n  const returnUrl = `${laundryConfig.siteUrl}/order-success`;\n  \n  const params = new URLSearchParams({\n    laundrySlug: laundryConfig.slug,\n    returnUrl,\n    cart: JSON.stringify(cartItems),\n    customer: JSON.stringify(customerInfo),\n  });\n  \n  return `${laundryConfig.saasUrl}/checkout?${params.toString()}`;\n};\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;AAED;;AAEA,oCAAoC;AACpC,MAAM,aAAa,CAAC;IAClB,oCAAoC;IACpC,IAAI,8HAAa,CAAC,OAAO,EAAE;QACzB,OAAO,GAAG,8HAAa,CAAC,OAAO,GAAG,MAAM;IAC1C;IAEA,4DAA4D;IAC5D,4EAA4E;IAC5E,wCAAmC;QACjC,MAAM,WAAW,sCAAwC,0BAAU;QACnE,MAAM,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE,QAAQ,GAAG,CAAC,IAAI,IAAI,MAAM;QAC9E,OAAO,GAAG,SAAS,GAAG,EAAE,OAAO,MAAM;IACvC;;;AAIF;AAKO,MAAM,mBAAmB;IAC9B,MAAM,MAAM,WAAW,CAAC,oBAAoB,EAAE,8HAAa,CAAC,IAAI,CAAC,KAAK,CAAC;IAEvE,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,SAAS;YACP,aAAa,8HAAa,CAAC,MAAM;YACjC,gBAAgB;QAClB;QACA,OAAO;IACT;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,SAAS,UAAU,EAAE;IACxE;IAEA,OAAO,SAAS,IAAI;AACtB;AAKO,MAAM,gBAAgB;IAC3B,MAAM,MAAM,WAAW,CAAC,oBAAoB,EAAE,8HAAa,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3E,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,SAAS;YACP,aAAa,8HAAa,CAAC,MAAM;YACjC,gBAAgB;QAClB;QACA,OAAO;IACT;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,UAAU,EAAE;IACpE;IAEA,OAAO,SAAS,IAAI;AACtB;AAMO,MAAM,cAAc,OACzB,WACA,cACA,qBACA;IAEA,IAAI;QACF,MAAM,MAAM,WAAW;QACvB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,QAAQ;YACR,SAAS;gBACP,aAAa,8HAAa,CAAC,MAAM;gBACjC,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,aAAa,8HAAa,CAAC,IAAI;gBAC/B,WAAW,UAAU,GAAG,CAAC,CAAA,OAAQ,CAAC;wBAChC,WAAW,KAAK,SAAS;wBACzB,aAAa,KAAK,WAAW;wBAC7B,UAAU,KAAK,QAAQ;oBACzB,CAAC;gBACD;gBACA;gBACA;YACF;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI;QACrC;QAEA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;IACnC;AACF;AAMO,MAAM,iBAAiB,CAC5B,WACA;IAEA,MAAM,YAAY,GAAG,8HAAa,CAAC,OAAO,CAAC,cAAc,CAAC;IAE1D,MAAM,SAAS,IAAI,gBAAgB;QACjC,aAAa,8HAAa,CAAC,IAAI;QAC/B;QACA,MAAM,KAAK,SAAS,CAAC;QACrB,UAAU,KAAK,SAAS,CAAC;IAC3B;IAEA,OAAO,GAAG,8HAAa,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,QAAQ,IAAI;AACjE","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/lib/cart-store.ts"],"sourcesContent":["/**\n * Shopping Cart Store using Zustand\n * Persists to localStorage\n */\n\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { CartItem } from './config';\n\ninterface CartStore {\n  items: CartItem[];\n  addItem: (item: CartItem) => void;\n  removeItem: (productId: string, serviceType: string) => void;\n  updateQuantity: (productId: string, serviceType: string, quantity: number) => void;\n  clearCart: () => void;\n  getTotalItems: () => number;\n  getTotalPrice: () => number;\n}\n\nexport const useCartStore = create<CartStore>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      \n      addItem: (newItem) => {\n        set((state) => {\n          // Check if item already exists\n          const existingIndex = state.items.findIndex(\n            (item) => item.productId === newItem.productId && item.serviceType === newItem.serviceType\n          );\n          \n          if (existingIndex >= 0) {\n            // Update quantity\n            const updatedItems = [...state.items];\n            updatedItems[existingIndex].quantity += newItem.quantity;\n            return { items: updatedItems };\n          }\n          \n          // Add new item\n          return { items: [...state.items, newItem] };\n        });\n      },\n      \n      removeItem: (productId, serviceType) => {\n        set((state) => ({\n          items: state.items.filter(\n            (item) => !(item.productId === productId && item.serviceType === serviceType)\n          ),\n        }));\n      },\n      \n      updateQuantity: (productId, serviceType, quantity) => {\n        set((state) => {\n          if (quantity <= 0) {\n            // Remove item if quantity is 0\n            return {\n              items: state.items.filter(\n                (item) => !(item.productId === productId && item.serviceType === serviceType)\n              ),\n            };\n          }\n          \n          const updatedItems = state.items.map((item) =>\n            item.productId === productId && item.serviceType === serviceType\n              ? { ...item, quantity }\n              : item\n          );\n          \n          return { items: updatedItems };\n        });\n      },\n      \n      clearCart: () => {\n        set({ items: [] });\n      },\n      \n      getTotalItems: () => {\n        return get().items.reduce((total, item) => total + item.quantity, 0);\n      },\n      \n      getTotalPrice: () => {\n        return get().items.reduce((total, item) => total + item.price * item.quantity, 0);\n      },\n    }),\n    {\n      name: 'clean-fresh-cart', // localStorage key\n    }\n  )\n);\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAED;AACA;;;AAaO,MAAM,eAAe,IAAA,kJAAM,IAChC,IAAA,wJAAO,EACL,CAAC,KAAK,MAAQ,CAAC;QACb,OAAO,EAAE;QAET,SAAS,CAAC;YACR,IAAI,CAAC;gBACH,+BAA+B;gBAC/B,MAAM,gBAAgB,MAAM,KAAK,CAAC,SAAS,CACzC,CAAC,OAAS,KAAK,SAAS,KAAK,QAAQ,SAAS,IAAI,KAAK,WAAW,KAAK,QAAQ,WAAW;gBAG5F,IAAI,iBAAiB,GAAG;oBACtB,kBAAkB;oBAClB,MAAM,eAAe;2BAAI,MAAM,KAAK;qBAAC;oBACrC,YAAY,CAAC,cAAc,CAAC,QAAQ,IAAI,QAAQ,QAAQ;oBACxD,OAAO;wBAAE,OAAO;oBAAa;gBAC/B;gBAEA,eAAe;gBACf,OAAO;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAQ;gBAAC;YAC5C;QACF;QAEA,YAAY,CAAC,WAAW;YACtB,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,MAAM,CACvB,CAAC,OAAS,CAAC,CAAC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,WAAW;gBAEhF,CAAC;QACH;QAEA,gBAAgB,CAAC,WAAW,aAAa;YACvC,IAAI,CAAC;gBACH,IAAI,YAAY,GAAG;oBACjB,+BAA+B;oBAC/B,OAAO;wBACL,OAAO,MAAM,KAAK,CAAC,MAAM,CACvB,CAAC,OAAS,CAAC,CAAC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,WAAW;oBAEhF;gBACF;gBAEA,MAAM,eAAe,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,OACpC,KAAK,SAAS,KAAK,aAAa,KAAK,WAAW,KAAK,cACjD;wBAAE,GAAG,IAAI;wBAAE;oBAAS,IACpB;gBAGN,OAAO;oBAAE,OAAO;gBAAa;YAC/B;QACF;QAEA,WAAW;YACT,IAAI;gBAAE,OAAO,EAAE;YAAC;QAClB;QAEA,eAAe;YACb,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,QAAQ,EAAE;QACpE;QAEA,eAAe;YACb,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;QACjF;IACF,CAAC,GACD;IACE,MAAM;AACR","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbook/Documents/pressingrabat/app/cart/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useRouter } from 'next/navigation';\nimport { fetchLaundryInfo } from '@/lib/saas-api';\nimport { useCartStore } from '@/lib/cart-store';\nimport type { LaundryInfo } from '@/lib/config';\n\nexport default function CartPage() {\n  const [laundryInfo, setLaundryInfo] = useState<LaundryInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  \n  const { items, removeItem, updateQuantity, clearCart, getTotalPrice, getTotalItems } = useCartStore();\n  const router = useRouter();\n\n  useEffect(() => {\n    const loadLaundryInfo = async () => {\n      try {\n        const data = await fetchLaundryInfo();\n        setLaundryInfo(data);\n      } catch (error) {\n        console.error('Failed to load laundry info:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadLaundryInfo();\n  }, []);\n\n  const handleQuantityChange = (productId: string, serviceId: string, newQuantity: number) => {\n    if (newQuantity < 1) {\n      removeItem(productId, serviceId);\n    } else {\n      updateQuantity(productId, serviceId, newQuantity);\n    }\n  };\n\n  const handleProceedToCheckout = () => {\n    router.push('/checkout');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"flex items-center space-x-3\">\n              {laundryInfo?.logo && (\n                <Image\n                  src={laundryInfo.logo}\n                  alt={laundryInfo.name}\n                  width={40}\n                  height={40}\n                  className=\"rounded-lg\"\n                />\n              )}\n              <span className=\"text-xl font-bold text-gray-900\">\n                {laundryInfo?.name || 'Clean & Fresh Laundry'}\n              </span>\n            </Link>\n            \n            <div className=\"flex items-center space-x-6\">\n              <Link href=\"/\" className=\"text-gray-700 hover:text-blue-600 transition\">\n                Home\n              </Link>\n              <Link href=\"/services\" className=\"text-gray-700 hover:text-blue-600 transition\">\n                Services\n              </Link>\n              <Link href=\"/cart\" className=\"text-blue-600 font-semibold\">\n                Cart\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Cart Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Shopping Cart</h1>\n\n        {items.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow-md p-12 text-center\">\n            <svg className=\"w-24 h-24 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\n            </svg>\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">Your cart is empty</h2>\n            <p className=\"text-gray-600 mb-6\">Add some items to get started!</p>\n            <Link\n              href=\"/services\"\n              className=\"inline-block bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition\"\n            >\n              Browse Services\n            </Link>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Cart Items */}\n            <div className=\"lg:col-span-2 space-y-4\">\n              {items.map((item) => (\n                <div key={`${item.productId}-${item.serviceId}`} className=\"bg-white rounded-lg shadow-md p-6\">\n                  <div className=\"flex items-start space-x-4\">\n                    {/* Product Image */}\n                    <div className=\"flex-shrink-0\">\n                      {item.image || item.imageUrl ? (\n                        <div className=\"relative w-24 h-24 bg-gray-200 rounded-lg overflow-hidden\">\n                          <Image\n                            src={item.image || item.imageUrl || ''}\n                            alt={item.productName}\n                            fill\n                            className=\"object-cover\"\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"w-24 h-24 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                          <svg className=\"w-12 h-12 text-white opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Product Details */}\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{item.productName}</h3>\n                      <p className=\"text-sm text-gray-600 mt-1\">{item.serviceName}</p>\n                      <p className=\"text-lg font-bold text-blue-600 mt-2\">${item.price.toFixed(2)}</p>\n                    </div>\n\n                    {/* Quantity Controls */}\n                    <div className=\"flex items-center space-x-3\">\n                      <button\n                        onClick={() => handleQuantityChange(item.productId, item.serviceId, item.quantity - 1)}\n                        className=\"w-8 h-8 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center transition\"\n                        aria-label=\"Decrease quantity\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\n                        </svg>\n                      </button>\n                      \n                      <span className=\"text-lg font-semibold w-8 text-center\">{item.quantity}</span>\n                      \n                      <button\n                        onClick={() => handleQuantityChange(item.productId, item.serviceId, item.quantity + 1)}\n                        className=\"w-8 h-8 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center transition\"\n                        aria-label=\"Increase quantity\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                        </svg>\n                      </button>\n                    </div>\n\n                    {/* Remove Button */}\n                    <button\n                      onClick={() => removeItem(item.productId, item.serviceId)}\n                      className=\"text-red-600 hover:text-red-700 p-2 transition\"\n                      aria-label=\"Remove item\"\n                    >\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n                    </button>\n                  </div>\n\n                  {/* Item Subtotal */}\n                  <div className=\"mt-4 pt-4 border-t border-gray-200 flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Item Subtotal:</span>\n                    <span className=\"text-lg font-bold text-gray-900\">${(item.price * item.quantity).toFixed(2)}</span>\n                  </div>\n                </div>\n              ))}\n\n              {/* Clear Cart Button */}\n              <button\n                onClick={clearCart}\n                className=\"w-full bg-red-50 text-red-600 py-3 px-4 rounded-lg font-semibold hover:bg-red-100 transition\"\n              >\n                Clear Cart\n              </button>\n            </div>\n\n            {/* Order Summary */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-24\">\n                <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Order Summary</h2>\n                \n                <div className=\"space-y-3 mb-6\">\n                  <div className=\"flex justify-between text-gray-600\">\n                    <span>Items ({getTotalItems()}):</span>\n                    <span className=\"font-semibold\">${getTotalPrice().toFixed(2)}</span>\n                  </div>\n                  \n                  <div className=\"border-t border-gray-200 pt-3\">\n                    <div className=\"flex justify-between text-lg font-bold text-gray-900\">\n                      <span>Total:</span>\n                      <span className=\"text-blue-600\">${getTotalPrice().toFixed(2)}</span>\n                    </div>\n                  </div>\n                </div>\n\n                <button\n                  onClick={handleProceedToCheckout}\n                  className=\"w-full bg-blue-600 text-white py-4 px-4 rounded-lg font-semibold hover:bg-blue-700 transition shadow-lg\"\n                >\n                  Proceed to Checkout\n                </button>\n\n                <Link\n                  href=\"/services\"\n                  className=\"block w-full text-center text-blue-600 py-3 px-4 mt-3 rounded-lg font-semibold hover:bg-blue-50 transition\"\n                >\n                  Continue Shopping\n                </Link>\n\n                {/* Additional Info */}\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <div className=\"flex items-start space-x-2 text-sm text-gray-600\">\n                    <svg className=\"w-5 h-5 text-green-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <p>Free pickup and delivery within {laundryInfo?.slaHours || 24} hours</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-800 text-white py-8 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <p>&copy; {new Date().getFullYear()} {laundryInfo?.name || 'Clean & Fresh Laundry'}. All rights reserved.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}